<project name="RMI" default="run" basedir=".">
  <description>This is build/run script for the RMI1 assignment. </description>

  <property name="src" location="src"/>
  <property name="build" location="bin"/>
  <property name="dist" location="dist"/>
  <!-- define the path to Jmeter installation -->
  <property name="jmeter.home" location="/home/jeffee/apache-jmeter-5.6.3"/>
  <!-- add jmeter jards to classpath -->
  <path id="cp">
	<pathelement location="${build}"/>
  <fileset dir="${jmeter.home}/lib" includes="*.jar"/> <!-- Adds all JARs in the lib directory -->
  <fileset dir="${jmeter.home}/lib/ext" includes="*.jar"/> <!-- Adds all JARs in the lib/ext directory -->
  </path>

  <!--
    ********************************************************
       Please set the following two parameters to point 
	   to your server's and client's Main-method classes
	   Example: "staff.BookingClient"
	            => Package: staff Classname: BookingClient
	   The third parameter is filename for the final zip.	   
    ******************************************************** -->
  <property name="main.client" value="staff.BookingClient" />
  <property name="main.server" value="server.BookingServer" />
  <property name="main.sampler" value="rmi.RMIJavaSampler" />
  <property name="client.manifest" value="${src}/clientManifest.mf"/>
  <property name="server.manifest" value="${src}/serverManifest.mf"/>
  <property name="sampler.manifest" value="${src}/samplerManifest.mf"/>
  <property name="zip.filename" value="rmi" />
  <!--
    ********************************************************
       Please DO NOT CHANGE any code below this line.
	******************************************************** -->

  <target name="init" >
	<delete dir="${build}" quiet="true"/>
    <mkdir dir="${build}"/>
	<delete dir="${dist}" quiet="true"/>
    <mkdir dir="${build}"/>
  </target>

  <target name="compile-sampler" depends="init">
    <javac includeantruntime="false" srcdir="${src}" destdir="${build}" classpathref="cp">
      <include name="rmi/**"/>
    </javac>
  </target>

  <target name="compile" depends="init">
    <javac includeantruntime="false" srcdir="${src}" destdir="${build}" classpathref="cp"/>
  </target>

  <target name="registry.start">
	<exec spawn="true" executable="rmiregistry" dir="${build}"/>
	<sleep milliseconds="5000"/>
  </target>

  <target name="registry.stop">
	<exec osfamily="windows" executable="taskkill">
	  <arg value="/IM"/>
	  <arg value="rmiregistry.exe"/>
	  <arg value="/F"/>
	</exec>
	<exec osfamily="unix" executable="killall">
		<arg value="rmiregistry"/>
	</exec>
  </target>
    
  <target name="run.serveronly">
	<java fork="true" classname="${main.server}">	
		<classpath refid="cp" />
	</java>
  </target>

  <target name="run.clientonly">
	<java classname="${main.client}">	
		<classpath refid="cp" />
	</java>
  </target>

  <target name="run.both">
	<java classname="${main.server}">	
		<classpath refid="cp" />
	</java>
	<java classname="${main.client}">	
		<classpath refid="cp" />
	</java>
  </target>
  
  <target name="zip">
		<delete file="${zip.filename}.zip" quiet="true"/>
		<zip destfile="${zip.filename}.zip" update="false">
			<zipfileset dir=".">
				<include name="*rips"/>
				<include name="*csv"/>
				<include name="build.xml" />
			</zipfileset>
			<zipfileset dir="src" prefix="src"/>
		</zip>
  </target>
  
  <target name="run" depends="compile,registry.start,run.both,registry.stop"/>
  <target name="run-wo-compile" depends="registry.start,run.both,registry.stop" />

  <!-- 
	********************************************************
		Jar Packaging
	******************************************************** -->

  <!-- Package the client code into a JAR -->
  <target name="jar-client" depends="compile">
    <jar destfile="${dist}/client.jar" basedir="${build}">
      <manifest>
        <attribute name="Main-Class" value="${main.client}"/>
      </manifest>
      <fileset dir="${build}" includes="staff/**"/>
    </jar>
  </target>

  <!-- Package the server code into a JAR -->
  <target name="jar-server" depends="compile">
    <jar destfile="${dist}/server.jar" basedir="${build}">
      <manifest>
        <attribute name="Main-Class" value="${main.server}"/>
      </manifest>
      <fileset dir="${build}" includes="hotel/**"/>
    </jar>
  </target>
  
  <!-- Package the rmi java sampler code into a JAR -->
  <target name="jar-sampler" depends="compile-sampler">
    <jar destfile="${dist}/RMIJavaSampler.jar" basedir="${build}">
      <manifest>
        <attribute name="Main-Class" value="${main.sampler}"/>
      </manifest>
      <fileset dir="${build}" includes="rmi/**"/>
    </jar>
  </target>


  <target name="run.jar" depends="jar-client, jar-server">
  	<echo message="Client and Server jars have been created in ${dist}"/>
  </target>

  <target name="clean">
	<delete dir="${build}" quiet="true"/>
	<delete dir="${dist}" quiet="true"/>
  </target>

</project>